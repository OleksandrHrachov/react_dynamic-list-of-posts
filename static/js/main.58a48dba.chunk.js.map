{"version":3,"sources":["components/Loader/Loader.tsx","api/api.ts","api/posts.ts","components/PostsList/PostsList.tsx","api/comments.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["Loader","className","BASE_URL","request","url","fetch","then","response","ok","Error","status","statusText","json","PostsList","selectedUser","setSelectedPostId","selectedPostId","useState","posts","setPosts","error","setError","loadAllPosts","a","allPosts","loadUserPosts","userPosts","useEffect","length","map","post","userId","title","id","type","onClick","options","getPostComments","postId","remove","comentId","method","createComment","name","email","body","headers","JSON","stringify","NewCommentForm","loadComments","setName","setEmail","setBody","updateComents","onSubmit","event","preventDefault","value","onChange","target","placeholder","PostDetails","postDetails","setPostDetails","postComments","setPostComments","isVisible","setIsVisible","currentPostComments","loadData","Promise","all","currentPostDetails","removeComent","postCommentId","postComment","Number","App","setSelectedUser","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58a48dba.chunk.js","sourcesContent":["import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export const BASE_URL = 'https://mate.academy/students-api';\n","import { BASE_URL } from './api';\n\nconst request = (url: string) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const getAllPosts = (): Promise<Post[]> => {\n  return request('/posts');\n};\n\nexport const getUserPosts = (userId: number): Promise<Post[]> => {\n  return request(`/posts?userId=${userId}`);\n};\n\nexport const getPostDetails = (postId: number): Promise<Post> => {\n  return request(`/posts/${postId}`);\n};\n","import React, { useState, useEffect } from 'react';\nimport './PostsList.scss';\nimport { Loader } from '../Loader/index';\n\nimport { getAllPosts, getUserPosts } from '../../api/posts';\n\ntype Props = {\n  selectedUser: number,\n  setSelectedPostId: (arg: number | null) => void,\n  selectedPostId: number | null,\n};\n\nexport const PostsList: React.FC<Props> = ({ selectedUser, setSelectedPostId, selectedPostId }) => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [error, setError] = useState('');\n\n  const loadAllPosts = async () => {\n    try {\n      const allPosts = await getAllPosts();\n\n      setError('');\n      setPosts(allPosts);\n    } catch (err) {\n      setError(`${err}`);\n    }\n  };\n\n  const loadUserPosts = async () => {\n    const userPosts = await getUserPosts(selectedUser);\n\n    setPosts(userPosts);\n  };\n\n  useEffect(() => {\n    if (selectedUser === 0) {\n      loadAllPosts();\n    } else {\n      loadUserPosts();\n    }\n  }, [selectedUser]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n      <h2>{error}</h2>\n\n      {(posts.length === 0) ? (\n        <Loader />\n      ) : (\n        <ul className=\"PostsList__list\">\n          {posts.map(post => (\n            <li key={post.id} className=\"PostsList__item\">\n              <div>\n                <b>{`User #${post.userId}: `}</b>\n                {post.title}\n              </div>\n\n              {(selectedPostId === post.id) ? (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => setSelectedPostId(null)}\n                >\n                  Close\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  className=\"PostsList__button button\"\n                  onClick={() => setSelectedPostId(post.id)}\n                >\n                  Open\n                </button>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n","import { BASE_URL } from './api';\n\nconst request = (url: string, options?: {}) => {\n  return fetch(`${BASE_URL}${url}`, options)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const getPostComments = (postId: number): Promise<Comment[]> => {\n  return request(`/comments?postId=${postId}`);\n};\n\nexport const remove = async (comentId: number): Promise<Comment> => {\n  return request(`/comments/${comentId}`, { method: 'DELETE' });\n};\n\nexport const createComment = (\n  postId: number,\n  name: string,\n  email: string,\n  body: string,\n): Promise<Comment> => {\n  return fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId,\n      name,\n      email,\n      body,\n    }),\n  })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport { createComment } from '../../api/comments';\n\ntype Props = {\n  id: number | undefined,\n  loadComments: () => void,\n};\n\nexport const NewCommentForm: React.FC<Props> = ({ id = 0, loadComments }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const updateComents = async () => {\n    await createComment(id, name, email, body);\n    loadComments();\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (name && email && body) {\n      updateComents();\n      setName('');\n      setEmail('');\n      setBody('');\n    }\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          value={name}\n          onChange={(event) => setName(event.target.value)}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          value={body}\n          onChange={(event) => setBody(event.target.value)}\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, remove } from '../../api/comments';\nimport { Loader } from '../Loader/index';\n\ntype Props = {\n  selectedPostId: number,\n};\n\nexport const PostDetails: React.FC<Props> = ({ selectedPostId }) => {\n  const [postDetails, setPostDetails] = useState<Post | null>(null);\n  const [postComments, setPostComments] = useState<Comment[] | null>(null);\n  const [isVisible, setIsVisible] = useState<boolean>(true);\n  const [error, setError] = useState('');\n\n  const loadComments = async () => {\n    const currentPostComments = await getPostComments(selectedPostId);\n\n    setPostComments(currentPostComments);\n  };\n\n  const loadData = async () => {\n    try {\n      setError('');\n\n      const [currentPostDetails, currentPostComments] = await Promise.all([\n        getPostDetails(selectedPostId),\n        getPostComments(selectedPostId),\n      ]);\n\n      setPostComments(currentPostComments);\n\n      setPostDetails(currentPostDetails);\n    } catch (err) {\n      setError(`${err}`);\n    }\n  };\n\n  const removeComent = async (postCommentId: number) => {\n    await remove(postCommentId);\n    loadComments();\n  };\n\n  useEffect(() => {\n    setPostDetails(null);\n    setPostComments(null);\n    loadData();\n  }, [selectedPostId]);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      <h2>{error}</h2>\n\n      {(postDetails) ? (\n        <>\n          <section className=\"PostDetails__post\">\n            <p>{postDetails?.title}</p>\n          </section>\n\n          <section className=\"PostDetails__comments\">\n\n            {postComments?.length === 0 ? (\n              <p>No comments yet</p>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => setIsVisible(!isVisible)}\n              >\n                {isVisible ? (\n                  `Hide ${postComments?.length} comments`\n                ) : (\n                  `Show ${postComments?.length} comments`\n                )}\n              </button>\n            )}\n\n            {isVisible && (\n              <ul className=\"PostDetails__list\">\n                {postComments?.map(postComment => (\n                  <li\n                    key={postComment.id}\n                    className=\"PostDetails__list-item\"\n                  >\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => removeComent(Number(postComment.id))}\n                    >\n                      X\n                    </button>\n                    <p>{postComment.body}</p>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm\n                id={postDetails?.id}\n                loadComments={loadComments}\n              />\n            </div>\n          </section>\n        </>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App: React.FC = () => {\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState<number | null>(null);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label htmlFor=\"select\">\n          Select a user: &nbsp;\n\n          <select\n            id=\"select\"\n            className=\"App__user-selector\"\n            onChange={(event) => setSelectedUser(+event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            selectedUser={selectedUser}\n            setSelectedPostId={setSelectedPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        {selectedPostId && (\n          <div className=\"App__content\">\n            <PostDetails selectedPostId={selectedPostId} />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}